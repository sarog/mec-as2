//$Header: /as2/de/mendelson/util/security/cert/gui/JDialogExport.java 5     2/11/23 15:53 Heller $
package de.mendelson.util.security.cert.gui;

import de.mendelson.util.MecResourceBundle;
import de.mendelson.util.MendelsonMultiResolutionImage;
import java.util.MissingResourceException;
import java.util.ResourceBundle;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JFrame;


/*
 * Copyright (C) mendelson-e-commerce GmbH Berlin Germany
 *
 * This software is subject to the license agreement set forth in the license.
 * Please read and agree to all terms before using this software.
 * Other product and brand names are trademarks of their respective owners.
 */
/**
 * Dialog to preselect what to import - a key or a certificate and how
 *
 * @author S.Heller
 * @version $Revision: 5 $
 */
public class JDialogExport extends JDialog {

    protected final static MendelsonMultiResolutionImage IMAGE_KEYSTORE_FILE
            = MendelsonMultiResolutionImage.fromSVG(
                    "/de/mendelson/util/security/cert/gui/document_keystore.svg", 
                    JDialogCertificates.IMAGE_SIZE_MENUITEM, 64);
    
    protected final static int SELECTION_CANCEL = 0;
    protected final static int SELECTION_EXPORT_CERTIFICATE = 1;
    protected final static int SELECTION_EXPORT_KEY = 2;
    protected final static int SELECTION_EXPORT_KEYSTORE = 3;
    private int selection = SELECTION_CANCEL;

    /**
     * ResourceBundle to localize the GUI
     */
    private final MecResourceBundle rb;
    private final MecResourceBundle rbCertificates;

    /**
     * Creates new form JDialogPartnerConfig
     *
     */
    public JDialogExport(JFrame parent) {
        super(parent, true);
        //load resource bundle
        try {
            this.rb = (MecResourceBundle) ResourceBundle.getBundle(
                    ResourceBundleExport.class.getName());
            this.rbCertificates = (MecResourceBundle) ResourceBundle.getBundle(
                    ResourceBundleCertificates.class.getName());
        } catch (MissingResourceException e) {
            throw new RuntimeException("Oops..resource bundle "
                    + e.getClassName() + " not found.");
        }
        this.setTitle(this.rb.getResourceString("title"));
        initComponents();
        this.setMultiresolutionIcons();
        this.getRootPane().setDefaultButton(this.jButtonOk);
    }

    /**
     * Overwrite the designers icons by multi resolution icons
     */
    private void setMultiresolutionIcons() {
        this.jLabelImage.setIcon(new ImageIcon(JDialogCertificates.IMAGE_EXPORT_MULTIRESOLUTION.toMinResolution(32)));
        this.jLabelImageCert.setIcon(new ImageIcon(JDialogCertificates.IMAGE_CERTIFICATE.toMinResolution(24)));
        this.jLabelImageKey.setIcon(new ImageIcon(JDialogCertificates.IMAGE_KEY.toMinResolution(24)));
        this.jLabelImageKeystore.setIcon(new ImageIcon(IMAGE_KEYSTORE_FILE.toMinResolution(24)));
    }

    /**
     * @return the selection
     */
    public int getSelection() {
        return selection;
    }

    private void computeSelection() {
        if (this.jRadioButtonExportCertificate.isSelected()) {
            this.selection = SELECTION_EXPORT_CERTIFICATE;
        }        
        if (this.jRadioButtonExportKey.isSelected()) {
            this.selection = SELECTION_EXPORT_KEY;
        }
        if (this.jRadioButtonExportKeystore.isSelected()) {
            this.selection = SELECTION_EXPORT_KEYSTORE;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroupImport = new javax.swing.ButtonGroup();
        jPanelEdit = new javax.swing.JPanel();
        jLabelImage = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jRadioButtonExportCertificate = new javax.swing.JRadioButton();
        jRadioButtonExportKey = new javax.swing.JRadioButton();
        jLabelWhatToExport = new javax.swing.JLabel();
        jLabelImageCert = new javax.swing.JLabel();
        jLabelImageKey = new javax.swing.JLabel();
        jLabelExportCertificate = new javax.swing.JLabel();
        jLabelExportKey = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabelImageKeystore = new javax.swing.JLabel();
        jLabelExportKeyStore = new javax.swing.JLabel();
        jRadioButtonExportKeystore = new javax.swing.JRadioButton();
        jPanelButtons = new javax.swing.JPanel();
        jButtonOk = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanelEdit.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanelEdit.setLayout(new java.awt.GridBagLayout());

        jLabelImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/mendelson/util/security/cert/gui/missing_image32x32.gif"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanelEdit.add(jLabelImage, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jPanelEdit.add(jPanel3, gridBagConstraints);

        buttonGroupImport.add(jRadioButtonExportCertificate);
        jRadioButtonExportCertificate.setSelected(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 5);
        jPanelEdit.add(jRadioButtonExportCertificate, gridBagConstraints);

        buttonGroupImport.add(jRadioButtonExportKey);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 5);
        jPanelEdit.add(jRadioButtonExportKey, gridBagConstraints);

        jLabelWhatToExport.setFont(new java.awt.Font("Dialog", 0, 13)); // NOI18N
        jLabelWhatToExport.setText(this.rb.getResourceString( "info.whattoexport")
        );
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanelEdit.add(jLabelWhatToExport, gridBagConstraints);

        jLabelImageCert.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/mendelson/util/security/cert/gui/missing_image24x24.gif"))); // NOI18N
        jLabelImageCert.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelImageCertMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        jPanelEdit.add(jLabelImageCert, gridBagConstraints);

        jLabelImageKey.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/mendelson/util/security/cert/gui/missing_image24x24.gif"))); // NOI18N
        jLabelImageKey.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelImageKeyMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        jPanelEdit.add(jLabelImageKey, gridBagConstraints);

        jLabelExportCertificate.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabelExportCertificate.setText(this.rbCertificates.getResourceString( "label.cert.export"));
        jLabelExportCertificate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelExportCertificateMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelEdit.add(jLabelExportCertificate, gridBagConstraints);

        jLabelExportKey.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabelExportKey.setText(this.rbCertificates.getResourceString( "label.key.export.pkcs12"));
        jLabelExportKey.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelExportKeyMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelEdit.add(jLabelExportKey, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 15, 5);
        jPanelEdit.add(jPanel1, gridBagConstraints);

        jLabelImageKeystore.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/mendelson/util/security/cert/gui/missing_image24x24.gif"))); // NOI18N
        jLabelImageKeystore.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelImageKeystoreMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        jPanelEdit.add(jLabelImageKeystore, gridBagConstraints);

        jLabelExportKeyStore.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabelExportKeyStore.setText(this.rbCertificates.getResourceString( "label.keystore.export"));
        jLabelExportKeyStore.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelExportKeyStoreMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelEdit.add(jLabelExportKeyStore, gridBagConstraints);

        buttonGroupImport.add(jRadioButtonExportKeystore);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 5);
        jPanelEdit.add(jRadioButtonExportKeystore, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(jPanelEdit, gridBagConstraints);

        jPanelButtons.setLayout(new java.awt.GridBagLayout());

        jButtonOk.setText(this.rb.getResourceString( "button.ok" ));
        jButtonOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOkActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanelButtons.add(jButtonOk, gridBagConstraints);

        jButtonCancel.setText(this.rb.getResourceString( "button.cancel" ));
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanelButtons.add(jButtonCancel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jPanelButtons, gridBagConstraints);

        setSize(new java.awt.Dimension(531, 307));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_jButtonCancelActionPerformed

    private void jButtonOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOkActionPerformed
        this.computeSelection();
        this.setVisible(false);
    }//GEN-LAST:event_jButtonOkActionPerformed

    private void jLabelImageCertMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelImageCertMouseClicked
        this.jRadioButtonExportCertificate.setSelected(true);
    }//GEN-LAST:event_jLabelImageCertMouseClicked

    private void jLabelExportCertificateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelExportCertificateMouseClicked
        this.jRadioButtonExportCertificate.setSelected(true);
    }//GEN-LAST:event_jLabelExportCertificateMouseClicked

    private void jLabelImageKeyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelImageKeyMouseClicked
        this.jRadioButtonExportKey.setSelected(true);
    }//GEN-LAST:event_jLabelImageKeyMouseClicked

    private void jLabelExportKeyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelExportKeyMouseClicked
        this.jRadioButtonExportKey.setSelected(true);
    }//GEN-LAST:event_jLabelExportKeyMouseClicked

    private void jLabelImageKeystoreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelImageKeystoreMouseClicked
       this.jRadioButtonExportKeystore.setSelected(true);
    }//GEN-LAST:event_jLabelImageKeystoreMouseClicked

    private void jLabelExportKeyStoreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelExportKeyStoreMouseClicked
         this.jRadioButtonExportKeystore.setSelected(true);
    }//GEN-LAST:event_jLabelExportKeyStoreMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupImport;
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonOk;
    private javax.swing.JLabel jLabelExportCertificate;
    private javax.swing.JLabel jLabelExportKey;
    private javax.swing.JLabel jLabelExportKeyStore;
    private javax.swing.JLabel jLabelImage;
    private javax.swing.JLabel jLabelImageCert;
    private javax.swing.JLabel jLabelImageKey;
    private javax.swing.JLabel jLabelImageKeystore;
    private javax.swing.JLabel jLabelWhatToExport;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanelButtons;
    private javax.swing.JPanel jPanelEdit;
    private javax.swing.JRadioButton jRadioButtonExportCertificate;
    private javax.swing.JRadioButton jRadioButtonExportKey;
    private javax.swing.JRadioButton jRadioButtonExportKeystore;
    // End of variables declaration//GEN-END:variables

}
